AI Developer
Last Updated:
10/22/24 at 12:31 am
Objective
Develop a FastAPI backend system with SQLAlchemy ORM for a conversational AI platform. The system should handle message processing, document management, and AI response generation using RAG for food queries and a weather API for weather queries.



Key Requirements
1. Database Models
Message Model: id, is_ai, content, timestamp 

Document Model: id, title, file_path, is_processed 

DocumentPage Model: document_id, page_number, content, is_processed 



2. API Endpoints
POST /messages 

Classify message as food or weather

Generate response based on classification:

Food: Use llama-3.1-70b-versatile  (Groq) with RAG

Weather: Fetch data from weather API for New York, and return the API data in natural language using GPT-4o (OpenAI)

Store message and response in database



POST /documents 

Process PDF: split into pages, chunk content

Embed chunks using text-embedding-3-small  (OpenAI)

Store in ChromaDB vector database



3. Technical Specifications
Implement message classification using LLM

Integrate Llama 3.1 70b Groq and GPT-4o

Use ChromaDB for vector storage of documents

Implement RAG for food queries

Integrate with a weather API



4. Additional Requirements
Error handling

API documentation (Swagger)

Detailed README with setup instructions

Clean, well-organized code



Deliverables
GitHub repository with source code, requirements, and documentation

README.md  explaining approach, assumptions, testing instructions, setup instructions, and challenges



Evaluation Criteria
Functional correctness

Code quality and organization

Application design

Attention to detail

Thoroughness in implementation



Deadline
Seven days from receipt of assignment



Notes
OpenAI API key will be provided in the email

Groq API key needs to be created by you. The account and tokens are free,

Document any assumptions made

Pay attention to edge cases

Document to vectorize is here

Get weather data here in the free package